{"version":3,"sources":["components/OtherCities/components/City/City.module.css","App.module.css","components/Current/components/Meta/Meta.module.css","components/Forecast/Forecast.module.css","components/OtherCities/OtherCities.module.css","components/Current/components/Text/Text.module.css","components/Current/Current.module.css","utils/OpenWeatherMap/OpenWeatherMap.js","components/VerticalDivider/VerticalDivider.js","components/Temperature/Temperature.js","components/Current/components/Text/Text.js","components/Current/components/Meta/Meta.js","components/Current/Current.js","components/Forecast/components/Weather/Weather.js","components/Forecast/Forecast.js","components/OtherCities/components/City/City.js","components/OtherCities/OtherCities.js","App.js","reportWebVitals.js","index.js","components/Forecast/components/Weather/Weather.module.css"],"names":["module","exports","OpenWeatherMap","axios","create","baseURL","params","units","appid","VerticalDivider","color","width","style","backgroundColor","Temperature","children","className","cx","classNames","bind","styles","Text","Meta","title","value","meta","Current","props","state","data","undefined","handleDataChange","newData","this","setState","get","id","then","response","current","left","temperature","Math","round","main","temp","weather","metas","humidity","wind","speed","right","city","bottom","React","Component","Weather","day","icon","src","alt","description","Forecast","lat","lon","exclude","console","log","forecast","header","daily","slice","map","dt","City","name","OTHER_CITIES","OtherCities","otherCitiesId","join","getOtherCitiesWeather","otherCities","list","App","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b848b07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"city\":\"City_city__17egf\",\"name\":\"City_name__2_DgT\",\"temperature\":\"City_temperature__2n7RT\",\"weather\":\"City_weather__2oL6g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"weather\":\"App_weather__2omPa\",\"bottom\":\"App_bottom__2k0cJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meta\":\"Meta_meta__2kyDj\",\"title\":\"Meta_title__6wWW7\",\"value\":\"Meta_value__wTczh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecast\":\"Forecast_forecast__3_gmE\",\"daily\":\"Forecast_daily__2ABvB\",\"header\":\"Forecast_header__x6DkH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"otherCities\":\"OtherCities_otherCities__jnC3A\",\"header\":\"OtherCities_header__2tsE7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Text_text__2sREv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"current\":\"Current_current__2bCtp\",\"left\":\"Current_left__3KflQ\",\"right\":\"Current_right__3aLAj\",\"bottom\":\"Current_bottom__1ZcpP\",\"temperature\":\"Current_temperature__3INBI\",\"weather\":\"Current_weather__IJi8t\",\"metas\":\"Current_metas__3u91J\",\"humidity\":\"Current_humidity__nzLzK\",\"wind\":\"Current_wind__354z-\",\"city\":\"Current_city__1g754\"};","import axios from 'axios';\n\nconst baseURL = 'https://api.openweathermap.org/data/2.5';\nconst units = 'metric';\nconst appid = '341c61617f750296a284129da8508009';\n\nconst OpenWeatherMap = axios.create({\n  baseURL,\n  params: {\n    units,\n    appid\n  }\n})\n\nexport default OpenWeatherMap;","import React from 'react';\n\nconst VerticalDivider = ({\n  color,\n  width,\n}) => (\n  <div \n    style={{\n      width,\n      backgroundColor: color,\n    }} \n  />\n);\n\nexport default VerticalDivider;","import React from 'react';\n\nconst Temperature = ({\n  children,\n  className,\n}) => (\n  <span className={className}>\n    {children}\n    <span>&nbsp;</span>\n    <span>&#176;</span>\n  </span>\n);\n\nexport default Temperature","import React from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './Text.module.css';\n\nconst cx = classNames.bind(styles);\n\nconst Text = ({\n  children,\n  className,\n}) => (\n  <span className={cx('text', className)}>\n    {children}\n  </span>\n);\n\nexport default Text;","import React from 'react';\nimport styles from './Meta.module.css';\nimport Text from '../Text';\n\nconst Meta = ({\n  title,\n  value,\n}) => (\n  <div className={styles.meta}>\n    <Text className={styles.title}>{title}</Text>\n    <br />\n    <Text className={styles.value}>{value}</Text>\n  </div>\n);\n\nexport default Meta;","import React from 'react';\nimport OpenWeatherMap from '../../utils/OpenWeatherMap/OpenWeatherMap';\nimport styles from './Current.module.css';\nimport VerticalDivider from '../VerticalDivider';\nimport Temperature from '../Temperature';\nimport Meta from './components/Meta';\n\nconst BRISBANE_CITY = '2174003';\n\nconst getCurrentCityWeather = () => OpenWeatherMap.get('/weather', {\n  params: {\n    id: BRISBANE_CITY,\n  },\n}).then((response) => response.data);\n\nclass Current extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: undefined,\n    }\n\n    this.handleDataChange = this.handleDataChange.bind(this);\n  }\n\n  handleDataChange(newData) {\n    this.setState({\n      data: newData,\n    });\n  };\n\n  componentDidMount() {\n    getCurrentCityWeather().then(this.handleDataChange)\n  }\n\n  render() {\n    const { data } = this.state;\n\n    if (!data) {\n      return 'Loading';\n    }\n\n    return (\n      <div className={styles.current}>\n        <div className={styles.left}>\n          <div className={styles.temperature}>\n            <Temperature>{Math.round(data.main.temp)}</Temperature>\n          </div>\n\n          <div className={styles.weather}>\n            {data.weather[0].main}\n          </div>\n\n          <div className={styles.metas}>\n            <div className={styles.humidity}>\n              <Meta title=\"HUMIDITY\" value={`${data.main.humidity}%`} />\n            </div>\n            <VerticalDivider width=\"2px\" color=\"rgba(255, 255, 255, 0.7)\" />\n            <div className={styles.wind}>\n              <Meta title=\"WIND\" value={`${data.wind.speed} KM/H`} />\n            </div>\n          </div>\n\n        </div>\n\n        <div className={styles.right}>\n          <h1 className={styles.city}>Brisbane</h1>\n        </div>\n        <div className={styles.bottom} />\n      </div>\n    )\n  }\n}\n\nexport default Current;","import React from 'react';\nimport styles from './Weather.module.css';\nimport Temperature from '../../../Temperature';\n\nconst Weather = ({\n  day,\n  temperature,\n  weather,\n}) => (\n  <div className={styles.weather}>\n    <div className={styles.day}>{day}</div>\n    <div className={styles.temperature}>\n      <Temperature>{temperature}</Temperature>\n    </div>\n    <img \n      className={styles.icon}\n      src={`http://openweathermap.org/img/wn/${weather.icon}@2x.png`} \n      alt={weather.description} \n    />\n    <div className={styles.description}>{weather.description}</div>\n  </div>\n);\n\nexport default Weather;","import React from 'react';\nimport styles from './Forecast.module.css';\nimport Weather from './components/Weather';\nimport OpenWeatherMap from '../../utils/OpenWeatherMap';\n\nconst BRISBANE_LAT = '-27.467939';\nconst BRISBANE_LON = '153.028091'\nconst EXCLUDE_DATA = 'current,minutely,hourly'\n\nconst getCurrentCityForecastWeather = () => OpenWeatherMap.get('/onecall', {\n  params: {\n    lat: BRISBANE_LAT,\n    lon: BRISBANE_LON,\n    exclude: EXCLUDE_DATA,\n  },\n}).then((response) => response.data);\nclass Forecast extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: undefined,\n    }\n\n    this.handleDataChange = this.handleDataChange.bind(this);\n  }\n\n  handleDataChange(newData) {\n    this.setState({\n      data: newData,\n    });\n  }\n\n  componentDidMount() {\n    getCurrentCityForecastWeather().then(this.handleDataChange);\n  }\n\n  render() {\n    const { data } = this.state;\n    console.log(data);\n\n    if (!data) {\n      return 'Loading';\n    }\n\n    return (\n      <div className={styles.forecast}>\n        <h2 className={styles.header}>Forecast</h2>\n        <div className={styles.daily}>\n          {data.daily.slice(0, 5).map(({ dt, temp: {day}, weather: [{main, icon}]}) => \n            <Weather\n              temperature = {Math.round(day)}\n              weather = {{description: main, icon}}\n            />\n          )}\n        </div>\n        \n      </div>\n    )\n  }\n\n}\n\nexport default Forecast;","import React from 'react';\nimport styles from './City.module.css';\nimport Temperature from '../../../Temperature';\n\nconst City = ({\n  name,\n  weather,\n  temperature,\n}) => (\n  <div className={styles.city}>\n    <h3 className={styles.name}>{name}</h3>\n    <div className={styles.temperature}>\n      <Temperature>{temperature}</Temperature>\n    </div>\n    <div className={styles.weather}>\n      <img src={`http://openweathermap.org/img/wn/${weather.icon}.png`} alt={weather.description} />\n      <span>{weather.description}</span>\n    </div>\n  </div>\n);\n\nexport default City;","import React from 'react';\nimport styles from './OtherCities.module.css';\nimport OpenWeatherMap from '../../utils/OpenWeatherMap';\nimport City from './components/City';\n\nconst OTHER_CITIES = [{\n  name: 'Sydney', id: 2147714,\n}, {\n  name: 'Melbourne', id: 2158177,\n}, {\n  name: 'Townsville', id: 2146142,\n}]\n\nconst getOtherCitiesWeather = () => {\n  const otherCitiesId = OTHER_CITIES.map((city) => city.id).join(',')\n\n  return OpenWeatherMap.get('/group', {\n    params: {\n      id: otherCitiesId,\n    }\n  }).then((response) => response.data);\n}\n\nclass OtherCities extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: undefined,\n    }\n\n    this.handleDataChange = this.handleDataChange.bind(this);\n  }\n\n  handleDataChange(newData) {\n    this.setState({\n      data: newData,\n    });\n  };\n\n  componentDidMount() {\n    getOtherCitiesWeather().then(this.handleDataChange);\n  }\n\n  render() {\n    const { data } = this.state;\n\n    if (!data) {\n      return 'Loading';\n    }\n\n    return (\n      <div className={styles.otherCities}>\n        <h2 className={styles.header}>Other Cities</h2>\n        <div>\n        {data.list.map(({id, name, main: {temp}, weather: [{main, icon}]}) => \n          <City\n            key = {id}\n            name = {name}\n            temperature = {Math.round(temp)}\n            weather = {{description: main, icon}}\n            />\n            )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default OtherCities;","import React from 'react';\nimport styles from './App.module.css';\nimport Current from './components/Current';\nimport Forecast from './components/Forecast';\nimport OtherCities from './components/OtherCities';\nimport VerticalDivider from './components/VerticalDivider';\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <div className={styles.weather}>\n        <div>\n          <Current />\n        </div>\n        <div className={styles.bottom}>\n          <OtherCities />\n          <VerticalDivider color=\"rgba(0, 0, 0, 0.1)\" width=\"3px\"/>\n          <Forecast />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weather\":\"Weather_weather__3jsGy\",\"day\":\"Weather_day__2jzaX\",\"temperature\":\"Weather_temperature__3Mhk9\",\"icon\":\"Weather_icon__1hI0I\",\"description\":\"Weather_description__1PduP\"};"],"sourceRoot":""}